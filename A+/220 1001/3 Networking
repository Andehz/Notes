1. Intro to IP
Moving truck and road analogy for network analogy.

Header at the beginning of a frame, trailer. Inbetween is the payload.

Encapsulation of protocols - putting one protocol within another within another.

TCP/UDP - OSI layer 4.

Multiple applications in different frames at the same time = multiplexing.


TCP - Transmission Control Protocol
Connection oriented protocol. Formal setup and close. "Reliable" form of delivery. Recovery from errors. Can manage out-of-order messages and retransmissions.
Receiver can manage how much data is sent based on responses sent to each other.

UDP - User Datagram Protocol
No formal open or close to the connection. Considered "unreliable" as there's no error recovery and no reordering of data retransmissions. Sender determines amount of data transmitted.

IP socket - IP address:port number
Port number tells us which service needs to receive a particular piece of data. Client and server would communicate via socket.

  Non-ephemeral port (permanent) - ports 0 - 1023 and usually on a server or service.
  ephemeral ports - 1024 - 65,535. Usually chosen only during that session by the client at random.

Servers most likely using non-ephemeral ports. TCP and UDP can be 0 - 65,535. Sometimes servers may use different ports than expected. No hard and fast rules so this is fine.

Clients do need to know the port for a service beforehand. If a server is using a different port for an app then it won't work. This is why ports need to be "well-known"
TCP and UDP ports aren't the same, they could be using the same port number and these are totally different sets of traffic. No conflict. Ports are for communication, not security!

-----------------------------------
2. Common Network Ports
Many "well-known" ports that you should know. See chart for common services and their "well-known" ports.
