Working with Providers

PSProvider is an adapter. Designed to take some kind of data storage and make it look like a disk drive.

Capabilities - Describes how a provider may be used
  ShouldProcess - Provider supports the use of -Whatif and -Confirm parameters. Allows you to "test" before a commit.
  Filter - Supports -Filter parameter on cmdlets that manipulate providers' content.
  Credentials - Provider permits you to specify alternate credentials when connecting to data stores.
  Transactions - Provider supports use of transactions, which allows you to use provider to make several changes, then either roll back or commit changes as a singular unit.

Get-PSDrive - Get all loaded PSDrives

Use a provider to create a PSDrive

PSDrive uses a singular provider to connect to data storage.

Cmdlets used with a PSDrive have the word Item in their noun
  get-command -noun *item*

------------------------------------------
Understanding how filesystem is organized

Windows filesystem is organized around three object types: drives, folders, and files.

  Drives - top-level object, contain both folders and files.
  Folders - Kind of container, can contain files and other Folders
  Files -  Not a container, more of an endpoint object.


Files and folders in Powershell are referred to as items as providers can be mapped to things other than a filesystem.


Items can have properties.

Normal verbs can apply to items as well as to item properties.
  ItemProperty noun refers to attributes of an item.
  ChildItem refers to items contained with an item, like a folder has child items (files)


Some cmdlets don't work with some providers. Refer to documentation in what works where.
Environment psprovider doesn't support item properties. There are a few psproviders that are like this as well.

set-location - Change the shell's current location to a different container-type item, like a folder.

Remember that while many data stores have some broad similarities, once you drill down into details they're wildly different. Note this.
Think about what kind of access and abilities each provider will give you.

-------------------------------------------
Using wildcards and literal paths


Most item cmdlets include a -Path property, and by default the property accepts wildcards.

* - zero or more chars

? - Any single digit character

-LiteralPath parameter - Specifies path but wildcards are treated as regular characters Instead. Not positional



------------------------------------
Other

New-Item - creates a new generic item. Must specify a type.
set-itemproperty - Change value of a property of an item.
